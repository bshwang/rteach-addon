class OBJECT_OT_cycle_pose_preview(bpy.types.Operator):
    bl_idname = "object.cycle_pose_preview"
    bl_label = "Cycle IK"

    direction: bpy.props.EnumProperty(
        items=[('NEXT','Next',''),('PREV','Prev','')]
    )

    def execute(self, ctx):
        p = ctx.scene.ik_motion_props
        arm = bpy.data.objects.get(p.armature)
        tgt = p.goal_object

        # üîß [DEBUG] ÏÑ†ÌÉùÎêú TCP ÏúÑÏπòÎ°ú Gizmo Ïä§ÎÉÖ
        obj = p.selected_teach_point
        if obj and tgt:
            tgt.matrix_world = obj.matrix_world.copy()
            print(f"[DEBUG] Gizmo snapped to {obj.name}")

        if not tgt:
            self.report({'ERROR'}, "Target not set")
            return {'CANCELLED'}

        sols = p.solutions
        if not sols:
            self.report({'WARNING'}, "No IK solutions stored")
            return {'CANCELLED'}

        count = len(sols)
        idx = p.current_index
        if self.direction == 'NEXT':
            idx = (idx + 1) % count
        else:
            idx = (idx - 1 + count) % count

        p.current_index = idx
        p.solution_index_ui = idx + 1
        q_sel = sols[idx]
        p.ik_solution_str = str([round(math.degrees(x), 1) for x in q_sel])

        if arm:
            frame = ctx.scene.frame_current
            apply_solution(arm, q_sel, frame, insert_keyframe=False)
            print(f"[DEBUG] Pose {idx+1}/{count} applied to {arm.name}")

        p.status_text = f"Pose {idx+1}/{count} previewed"
        return {'FINISHED'}
